

<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <meta name="format-detection" content="telephone=no">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0, user-scalable=0">

    <meta property="og:type"   content="website" />
    <meta property="og:url" content="http://dalpeng.com/gardenwedding/snsbbs" />
    <meta property="og:description" content="모든 것이 새로워지는 봄날,
사랑하는 두 사람이 새 인생을 시작하려 합니다.
바쁘시더라도 두 사람의 첫 시작을 축복해주시고
격려해 주신다면 더 없는 기쁨이 되겠습니다." />
    <meta property="og:title" content="결혼식에 초대합니다^^" />
    <meta property="og:image" content="//dalpeng.com/user/gardenwedding/img/S_7445cc41988e70ed839f0505739f50fb.jpg" />

    <title>GUEST BOOK</title>
    <link href="/img/mobileicon/dalpeng_152x152.png" sizes="152x152" rel="apple-touch-icon">
    <link href="/img/mobileicon/dalpeng_120x120.png" sizes="120x120" rel="apple-touch-icon">
    <link href="/img/mobileicon/dalpeng_76x76.png" sizes="76x76" rel="apple-touch-icon">
    <link href="/img/mobileicon/dalpeng_60x60.png" sizes="60x60" rel="apple-touch-icon">
    <link rel="icon" sizes="192x192" href="/img/mobileicon/dalpeng_192x192.png">
    <link rel="icon" sizes="128x128" href="/img/mobileicon/dalpeng_128x128.png">

    <link rel="stylesheet" type="text/css" href="/bundles/viettutweb/css/templates/common/snsbbs.css?v=201706301332">
    <link rel="stylesheet" type="text/css" href="/bundles/viettutweb/css/lib/uploadifive.css" />
    <link rel="stylesheet" type="text/css" href="/bundles/viettutweb/css/lib/jquery.cropbox.custom.css" />

    <style>
        .snsbbs_wrap {overflow:hidden;}
    </style>

    <script type="text/javascript" src="/bundles/viettutweb/js/lib/jquery-1.11.1.min.js"></script>
    <script type="text/javascript" src="/bundles/viettutweb/js/lib/mustache.js"></script><em></em>
    <script type="text/javascript" src="/bundles/viettutweb/js/lib/masonry.pkgd.min.js"></script>
    <script type="text/javascript" src="/bundles/viettutweb/js/lib/imagesloaded.pkgd.min.js"></script>
    <script type="text/javascript" src="/bundles/viettutweb/js/lib/hammer.js"></script>
    <script type="text/javascript" src="/bundles/viettutweb/js/lib/jquery.mousewheel.js"></script>
    <script type="text/javascript" src="/bundles/viettutweb/js/lib/jquery.uploadifive.js"></script>
    <script type="text/javascript" src="/bundles/viettutweb/js/lib/jquery.cropbox.custom.js"></script>

    <script>
        $(document).ready(function(){
            $(".header_area").css("height",$(".header_area").width() * 0.9);
            $(".header_wrap .recentlist_box").css("top",$(".header_area").outerHeight() + 50);
            $(window).bind("orientationchange, resize", function(e) {
                $(".header_area").css("height",$(".header_area").width() * 0.9);
                $(".header_wrap .recentlist_box").css("top",$(".header_area").outerHeight() + 50);
            });

            var HeaderHeight = $('.header_wrap').outerHeight(true);
//	$('.snsbbs_wrap').css({'padding-top':HeaderHeight});
//	$(window).bind("orientationchange, resize", function(e) {
//		var HeaderHeight = $('.header_wrap').outerHeight(true);
//		$('.snsbbs_wrap').css({'padding-top':HeaderHeight});
//	});
//	$('.header').css({'background-size':'cover'});

            $(window).scroll(function() {
                var scrollTop = $(window).scrollTop();
                //$('.header_wrap').css({'background-size':'calc(100% + '+(scrollTop*2)+'px'});

                if ( scrollTop > HeaderHeight ) {
                    $('.gnb_wrap,.btn_write').addClass('fixed');
                } else {
                    $('.gnb_wrap,.btn_write').removeClass('fixed');
                }
            });

            $("html, body").scroll(function() {
                var scrollTop = $(this).scrollTop();
                //$('.header_wrap').css({'background-size':'calc(100% + '+(scrollTop*2)+'px'});

                if ( scrollTop > HeaderHeight ) {
                    $('.gnb_wrap,.btn_write').addClass('fixed');
                } else {
                    $('.gnb_wrap,.btn_write').removeClass('fixed');
                }
            });
        });
    </script>
</head>
<body class="orange"> <!-- 방명록색상 적용 orange / blue / pink / mint -->
<div id="fb-root"></div>
<script>(function(d, s, id) {
        var js, fjs = d.getElementsByTagName(s)[0];
        if (d.getElementById(id)) return;
        js = d.createElement(s); js.id = id;
        js.src = 'https://connect.facebook.net/en_US/sdk.js#xfbml=1&version=v2.10&appId=1934863569863740';
        fjs.parentNode.insertBefore(js, fjs);
    }(document, 'script', 'facebook-jssdk'));</script>
<input type="hidden" id="dn" value="32539" />
<input type="hidden" id="domainid" value="gardenwedding" />
<input type="hidden" id="nowpage" value="1" />
<input type="hidden" id="select_icon">
<input type="hidden" id="pop_select_img" value=""/>
<div class="snsbbs_wrap">

    <div class="gnb_wrap">
        <div class="color_bg"></div>
        <h1 class="title">LƯU BÚT</h1>
        <a href="{{ referrer }}" style="display:block;"><div class="back"><span class="ico-back">Quay lại</span></div></a>
        <div class="menu"><span class="ico-menu">Menu</span></div>

        <div class="gnb_login">
            <div class="write"><span class="ico-pencil">VIẾT</span></div>
        </div>
    </div>

    <!--헤더-->
    <div class="header_wrap">
        <div class="header_area" style="background:url('/bundles/viettutweb/img/templates/common/S_7445cc41988e70ed839f0505739f50fb.jpg') no-repeat center center;background-size:cover">
            <div class="header_contents">
                <div class="marrier">{{ groom }} & {{ bride }}</div>
                <div class="message">Ngày chung đôi</div>
                <div class="date"><span>{{ date | date('d.m.Y (l) H:i A') }} </span></div>
            </div>
            <div class="header_write"><span class="ico-pencil">Viết</span></div>
        </div>
        <div class="recentlist_box">
            <ul class="headertab_tabs recentlist_tabs">
                <li data-tab="hdrecent_tab1" class="on">Facebook<span class="color_txt count"></span></li>
                <li data-tab="hdrecent_tab2" class="">Đăng nhập<span class="color_txt count"></span></li>
            </ul>
            <div class="headertab_area recentlist_area on" id="hdrecent_tab1">
                <div class="fb-comments" data-href="https://developers.facebook.com/docs/plugins/comments#configurator" data-width="360" data-numposts="1"></div>
            </div>
            <div class="headertab_area recentlist_area" id="hdrecent_tab2">
                <div class="login_area on" id="login_tab1">
                    <form  method="POST" action="{{ path('fos_user_security_check') }}">
                        <ul class="login_form">
                            {% if csrf_token %}
                                <input type="hidden" name="_csrf_token" value="{{ csrf_token }}" />
                            {% endif %}
                            <li class="id_area">
                                <input type="text" id="nouser_name" name="_username" class="inp_id" placeholder="username">
                            </li>
                            <li class="pw_area">
                                <input type="password" id="nouser_password" name="_password" class="inp_pw" placeholder="password">
                                <input type="hidden" name="_target_path" value="{{ referrer }}" />
                            </li>
                            <li>
                                <button class="btn_login" id="bt_nouser_login">Đăng Nhập</button>
                            </li>
                            <li>
                                Chưa có tài khoản ?
                                <a href="{{ path('fos_user_registration_register') }}">
                                    Đăng ký
                                </a>
                            </li>
                        </ul>
                    </form>
                    <p class="alert_info">
                        {% if error %}
                            {{ error.messageKey|trans(error.messageData, 'security') }}
                        {% endif %}
                    </p>
                    {#<ul class="login_info">#}
                        {#<li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Writing is possible without membership.</font></font></li>#}
                        {#<li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Your name and password are required for deleting posts.</font></font></li>#}
                    {#</ul>#}
                    {#<div class="snslogin_line"><span><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">OR</font></font></span></div>#}
                    {#<ul class="snslogin_list">#}
                        {#<li><span id="bt_Facebook" class="ico-snslogin ico-facebook"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Facebook</font></font></span></li>#}
                        {#<li><span id="bt_Kakao" class="ico-snslogin ico-kakaotalk"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">KakaoTalk</font></font></span></li>#}
                        {#<li><span id="bt_Naver" class="ico-snslogin ico-naver"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Naver</font></font></span></li>#}
                        {#<li><span id="bt_Instagram" class="ico-snslogin ico-instagram"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Instagram</font></font></span></li>#}
                    {#</ul>#}
                    {#<ul class="login_info">#}
                        {#<li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Sign in easily with your SNS account!</font></font></li>#}
                    {#</ul>#}
                </div>
            </div>

        </div>

    </div>
    <!--//헤더-->

    <!--리스트-->
    <div class="contents_wrap">
        <ul class="contents_list" id="contents_list">
            <div class="gutter"></div>
            <div class="content_size"></div>
        </ul>
    </div>
    <!--//리스트-->

    <!--글쓰기버튼-->
    <div class="btn_write">
        <span class="ico-pencil">Viết</span>
    </div>
    <!--//글쓰기버튼-->


    <div class="footer_wrap">
        <div class="logo"><span>dalpeng</span></div>
    </div>
</div>


<!--메뉴 오픈-->
<div class="mypage_wrap" id="">
    <div class="mypage_close"><span class="ico-popclose-g">Đóng</span></div>
    <div class="recentlist_box">
        <ul class="mypagetab_tabs recentlist_tabs">
            <li data-tab="recent_tab1" class="on">Bài viết mới<span class="color_txt count"></span></li>
            <li data-tab="recent_tab2" class="">Nhận xét mới<span class="color_txt count"></span></li>
        </ul>
        <div class="mypagetab_area recentlist_area on" id="recent_tab1">
            <ul>
            </ul>
        </div>
        <div class="mypagetab_area recentlist_area" id="recent_tab2">
            <ul>
            </ul>
        </div>
    </div>
    <div class="mypage_btns mypage_btns1">
        <div class="mypage_btn write color_bg"><span>Viết</span></div>
    </div>
</div>
<!--//메뉴 오픈-->


<!--팝업:로그인-->
<div class="popup_wrap popup_login" id="popup_login">
    <div class="popup_box">
        <div class="pop_title">
            <ul class="login_tabs">
                <li data-tab="login_tab1" class="on">Chưa đăng nhập</li>
                <li data-tab="login_tab2" class="">Đăng nhập</li>
            </ul>
        </div>
        <div class="login_area on" id="login_tab1">
            <ul class="login_form">
                <li class="id_area"><label for="nouser_name">이름</label><input type="text" id="nouser_name" class="inp_id"></li>
                <li class="pw_area"><label for="nouser_pwd">비밀번호</label><input type="password" id="nouser_pwd" class="inp_pw"></li>
                <li><button class="btn_login" id="bt_nouser_login">글쓰기</button></li>
            </ul>
            <p class="alert_info"></p>
            <ul class="login_info">
                <li>회원가입 없이 글쓰기가 가능합니다.</li>
                <li>이름, 비밀번호는 글 삭제 시 필요합니다.</li>
            </ul>
            <div class="snslogin_line"><span>OR</span></div>
            <ul class="snslogin_list">
                <li><span id="bt_Facebook" class="ico-snslogin ico-facebook">페이스북</span></li>
                <li><span id="bt_Kakao" class="ico-snslogin ico-kakaotalk">카카오톡</span></li>
                <li><span id="bt_Naver" class="ico-snslogin ico-naver">네이버</span></li>
                <li><span id="bt_Instagram" class="ico-snslogin ico-instagram">인스타그램</span></li>
            </ul>
            <ul class="login_info">
                <li>SNS계정으로 간편하게 로그인하세요!</li>
            </ul>
        </div>
        <div class="login_area" id="login_tab2">
            <ul class="login_form">
                <li class="id_area"><label for="userid">아이디(이메일)</label><input type="text" id="userid" class="inp_id"></li>
                <li class="pw_area"><label for="userpwd">비밀번호</label><input type="password" id="userpwd" class="inp_pw"></li>
                <li><button class="btn_login" id="bt_dalpeng_login">로그인</button></li>
                <li><button class="btn_login btn_naver" id="bt_dpNaver">네이버아이디로 로그인</button></li>
            </ul>
            <p class="alert_info"></p>
            <ul class="login_info">
                <li>달팽회원 아이디(이메일)로 로그인하시면<br>방명록을 관리하실 수 있습니다.</li>
            </ul>
        </div>

        <div class="popup_close"><span class="ico-popclose-g">닫기</span></div>
    </div>
</div>
<!--//팝업:로그인-->


<!--팝업:글쓰기-->
<div class="popup_wrap popup_write" id="popup_write">
    <div class="popup_box">
        <div class="pop_title color_bg">방명록 글쓰기</div>
        <div class="pop_write">
            <div class="profile_area">
                <div class="profile_img">
                    <img src="/img/snsbbs/nouser.png" alt="">
                </div>
                <div class="ico-sns-small notlogin"></div>
            </div>
            <div class="name_area">
                <div class="user_name"><span></span></div>
            </div>
            <div class="text_area">
                <textarea class="ui-state-disabled" id="contents" placeholder="내용을 입력해주세요"></textarea>
            </div>

            <div class="select_area">

                <div id="div_emo_select" class="emo_select-hide" style="display:none;width:176px;">
                    <div id="bt_close_selecticon" class="emo_select_close"><span class="ico-minus-w">삭제</span></div>
                </div>
            </div>

            <div class="btn_area">
                <div class="write_emo"><i class="fa fa-smile-o"></i><span class="hidden">이모티콘 선택</span></div><!--이모티콘선택하면 .on 추가-->
                <div class="write_btn color_bg"><span class="ico-pencil">글쓰기</span></div>
            </div>
        </div>
        <div class="popup_close"><span class="ico-popclose-w">닫기</span></div>

    </div>
</div>
<!--//팝업:글쓰기-->

<!--팝업:글읽기-->
<div class="popup_wrap popup_read" id="popup_read">
    <div class="popup_box">
        <div class="pop_read">
            <div class="pop_title color_bg">방명록 글읽기</div>
            <div class="message_box">
                <div class="message_area">
                    <div class="profile_area">
                        <div class="profile_img">
                            <img src="/img/snsbbs/nouser.png" alt="">
                        </div>
                        <div class="ico-sns-medium nouser"></div>
                    </div>
                    <div class="text_area">
                        <div class="user_name"></div>
                        <p></p>
                    </div>
                    <div class="reply_area">
                        <div class="reply_btn"><i class="fa fa-commenting-o fa-flip-horizontal color_txt"></i><span class="hidden">댓글</span><span class="reply_txt color_txt">0</span></div>
                    </div>
                    <div class="del_area">
                        <div class="del_btn"><span class="ico-trash">글삭제</span></div>
                        <div class="info_date"><span></span></div>
                    </div>
                </div>
            </div>

            <div class="comment_box">
                <div class="pop_emo_area">
                    <div class="pop_emo_box">
                        <div class="pop_emo_select emo-type-a emo09 hide" id="pop_emo_select" style="display:none; width: 120px;">
                            <div id="bt_pop_close_selecticon" class="emo_select_close"><span class="ico-close-w">삭제</span></div>
                        </div>
                    </div>
                </div>

                <div class="write_area">
                    <div class="write_emo"><i class="fa fa-smile-o"></i><span class="hidden">이모티콘 선택</span></div><!--이모티콘 선택하면 .on 추가-->
                    <div class="write_input"><input type="text" id="" placeholder="댓글 달기"></div>
                    <div class="write_btn color_bg"><span class="ico-pencil">등록</span></div>
                </div>
                <ul class="comm_list">
                </ul>
            </div>
            <div class="popup_arrow"><span class="ico-prev">이전글</span><span class="ico-next">다음글</span></div>
            <div class="popup_close"><span class="ico-popclose-w">닫기</span></div>
        </div>
    </div>
</div>
<!--//팝업:글읽기-->

<!--팝업:이모티콘-->
<div class="popup_wrap popup_icon" id="popup_icon">
    <div class="popup_box">
        <div class="emoticon_area" id="pop_icon">
            <ul class="popemo_tabs">
                <li data-tab="poptab_seta" class="popemo_tab popemo_taba on"><span>달팽이모티콘 A</span></li>
                <li data-tab="poptab_setb" class="popemo_tab popemo_tabb"><span>달팽이모티콘 B</span></li>
                <li data-tab="poptab_setc" class="popemo_tab popemo_tabc"><span>청첩장 전용이모티콘</span></li>
            </ul>
            <ul class="popemo_list on" id="poptab_seta">
                <li><div class="popemoset emo-small-a emo01" id="emo01a"></div></li>
                <li><div class="popemoset emo-small-a emo02" id="emo02a"></div></li>
                <li><div class="popemoset emo-small-a emo03" id="emo03a"></div></li>
                <li><div class="popemoset emo-small-a emo04" id="emo04a"></div></li>
                <li><div class="popemoset emo-small-a emo05" id="emo05a"></div></li>
                <li><div class="popemoset emo-small-a emo06" id="emo06a"></div></li>
                <li><div class="popemoset emo-small-a emo07" id="emo07a"></div></li>
                <li><div class="popemoset emo-small-a emo08" id="emo08a"></div></li>
                <li><div class="popemoset emo-small-a emo09" id="emo09a"></div></li>
                <li><div class="popemoset emo-small-a emo10" id="emo10a"></div></li>
                <li><div class="popemoset emo-small-a emo11" id="emo11a"></div></li>
                <li><div class="popemoset emo-small-a emo12" id="emo12a"></div></li>
                <li><div class="popemoset emo-small-a emo13" id="emo13a"></div></li>
                <li><div class="popemoset emo-small-a emo14" id="emo14a"></div></li>
                <li><div class="popemoset emo-small-a emo15" id="emo15a"></div></li>
                <li><div class="popemoset emo-small-a emo16" id="emo16a"></div></li>
                <li><div class="popemoset emo-small-a emo17" id="emo17a"></div></li>
                <li><div class="popemoset emo-small-a emo18" id="emo18a"></div></li>
                <li><div class="popemoset emo-small-a emo19" id="emo19a"></div></li>
                <li><div class="popemoset emo-small-a emo20" id="emo20a"></div></li>
            </ul>
            <ul class="popemo_list" id="poptab_setb">
                <li><div class="popemoset emo-small-b emo01" id="emo01b"></div></li>
                <li><div class="popemoset emo-small-b emo02" id="emo02b"></div></li>
                <li><div class="popemoset emo-small-b emo03" id="emo03b"></div></li>
                <li><div class="popemoset emo-small-b emo04" id="emo04b"></div></li>
                <li><div class="popemoset emo-small-b emo05" id="emo05b"></div></li>
                <li><div class="popemoset emo-small-b emo06" id="emo06b"></div></li>
                <li><div class="popemoset emo-small-b emo07" id="emo07b"></div></li>
                <li><div class="popemoset emo-small-b emo08" id="emo08b"></div></li>
                <li><div class="popemoset emo-small-b emo09" id="emo09b"></div></li>
                <li><div class="popemoset emo-small-b emo10" id="emo10b"></div></li>
                <li><div class="popemoset emo-small-b emo11" id="emo11b"></div></li>
                <li><div class="popemoset emo-small-b emo12" id="emo12b"></div></li>
                <li><div class="popemoset emo-small-b emo13" id="emo13b"></div></li>
                <li><div class="popemoset emo-small-b emo14" id="emo14b"></div></li>
                <li><div class="popemoset emo-small-b emo15" id="emo15b"></div></li>
                <li><div class="popemoset emo-small-b emo16" id="emo16b"></div></li>
                <li><div class="popemoset emo-small-b emo17" id="emo17b"></div></li>
                <li><div class="popemoset emo-small-b emo18" id="emo18b"></div></li>
                <li><div class="popemoset emo-small-b emo19" id="emo19b"></div></li>
                <li><div class="popemoset emo-small-b emo20" id="emo20b"></div></li>
            </ul>
            <ul class="popemo_list" id="poptab_setc">
                <li><div class="popemoset emo-type-c emo01" id="emo01c"></div></li>
                <li><div class="popemoset emo-type-c emo02" id="emo02c"></div></li>
                <li><div class="popemoset emo-type-c emo03" id="emo03c"></div></li>
                <li><div class="popemoset emo-type-c emo04" id="emo04c"></div></li>
                <li><div class="popemoset emo-type-c emo05" id="emo05c"></div></li>
                <li><div class="popemoset emo-type-c emo06" id="emo06c"></div></li>
                <li><div class="popemoset emo-type-c emo07" id="emo07c"></div></li>
                <li><div class="popemoset emo-type-c emo08" id="emo08c"></div></li>
                <li><div class="popemoset emo-type-c emo09" id="emo09c"></div></li>
                <li><div class="popemoset emo-type-c emo10" id="emo10c"></div></li>
                <li><div class="popemoset emo-type-c emo11" id="emo11c"></div></li>
            </ul>
        </div>
        <div class="popup_close"><span class="ico-popclose-g">닫기</span></div>
    </div>
</div>
<!--//팝업:이모티콘-->




<!--팝업:삭제-->
<div class="popup_wrap popup_del" id="popup_del">
    <div class="popup_box">
        <div class="pop_title"><span class="ico-warning">글을 삭제하시겠습니까?</span></div>
        <div class="pop_text">해당 글을 삭제하시면 포함된 댓글도 모두 삭제됩니다.</div>
        <div class="pop_btns pop_btns2">
            <div class="pop_btn cancel">취소</div>
            <div class="pop_btn ok color_bg">삭제</div>
        </div>
    </div>
</div>
<!--//팝업:삭제-->

<!--팝업:댓글삭제-->
<div class="popup_wrap popup_comment_del" id="popup_comment_del">
    <div class="popup_box">
        <div class="pop_title"><span class="ico-warning">댓글을 삭제하시겠습니까?</span></div>
        <div class="pop_btns pop_btns2">
            <div class="pop_btn cancel">취소</div>
            <div class="pop_btn ok color_bg">삭제</div>
        </div>
    </div>
</div>
<!--//팝업:댓글삭제-->

<!--팝업:로그아웃-->
<div class="popup_wrap popup_logout" id="popup_logout">
    <div class="popup_box">
        <div class="pop_title"><span class="ico-logout">로그아웃하시겠습니까?</span></div>
        <div class="pop_btns pop_btns2">
            <div class="pop_btn cancel">취소</div>
            <div class="pop_btn ok color_bg">확인</div>
        </div>
    </div>
</div>
<!--//팝업:로그아웃-->

<!--팝업:프로필이미지업로드-->
<div class="popup_wrap popup_upload" id="">
    <div class="popup_box">
        <div class="pop_title">프로필이미지 편집</div>
        <div class="pop_upload">
            <div id="upload"></div>
            <div id="upload_queue" class="hide" style="position:absolute;width:230px;z-index:999;"></div>
            <div class="pop_upload_img">
                <img src="/img/snsbbs/profile_noimg.png" alt="">
            </div>
            <div class="pop_upload_btn color_bg"><span class="ico-upload">파일찾기</span></div>
            <div class="pop_imgdel_btn"><span class="ico-close-w">삭제</span></div>
            <div class="pop_pm_btn" style="display:none"><span class="ico-plus"></span><span class="ico-minus"></span></div>
        </div>
        <div class="pop_upload_info">
            <p class="info1">프로필이미지 영역을 참고하시어<br>사진 위치를 조정해주세요.</p>
        </div>
        <div class="pop_btns pop_btns2">
            <div class="pop_btn cancel">취소</div>
            <div class="pop_btn ok color_bg">적용</div>
        </div>
        <div class="popup_close"><span class="ico-popclose-w">닫기</span></div>
    </div>
</div>
<!--//팝업:프로필이미지업로드-->

<script>
    $(function() {
        var $document = $(document);
        var grid = $(".contents_list");

        // 이미지 크롭
        var cropdata = {};
        var croptarget = "";
        var background_img = "/img/snsbbs/profile_noimg.png";

        function errLoginMsg(md, msg){
            if(md == 'nouser') tab = '#login_tab1';
            else tab = '#login_tab2';

            $(tab + ' .alert_info').html(msg);
        }

        function localLogin(md){
            var set_data;
            var $popup_login = $("#popup_login");
            var comment_write = $popup_login.data("comment_write");
            var menu_login = $popup_login.data("menu_login");

            if(md == 'nouser'){
                var set_data = {'md':md,'nousername': encodeURIComponent($('#nouser_name').val()), 'nouserpwd': encodeURIComponent($('#nouser_pwd').val()) };
            }else if(md == 'dalpeng'){
                var set_data = {'md':md,'userid': encodeURIComponent($('#userid').val()), 'userpwd': encodeURIComponent($('#userpwd').val()) };
            }

            if(comment_write) {
                set_data.content_write = false;
            }

            if(menu_login) {
                set_data.content_write = false;
            }

            $.ajax({
                type:	'post',
                url	:	'/snsbbs/snsLogin',
                data: set_data,
                dataType: "json",
                success: function(result) {
                    if(result.code == 200) {
                        //location.reload();
                        location.href="/gardenwedding/snsbbs";
                    } else{
                        errLoginMsg(md, result.msg);
                        //alert(result.msg);
                    }
                },
                error: function() {
                    alert("처리 중 내부오류가 발생했습니다. 잠시후에 시도해 주십시요.");
                    //console.log("code:"+request.status+"\n"+"message:"+request.responseText+"\n"+"error:"+error);
                    return;
                },
                timeout: 10000
            });
        }

        // 글쓰기 상자 화면 크기를 조절해주는 함수
        function setPopupHeight($element) {
            var popup_height = $(".popup_write.on .popup_box").outerHeight(true);
            var browser_height = screen.availHeight - 66;
            var total_textarea_height = $element.prop("scrollHeight");
            var current_textarea_height = $element.prop("clientHeight"); // 모든 브라우저에서 되는지 꼭 체크하기!
            var textarea_lineHeight = $element.css("line-height");
            var lineHeight = 0;

            if(textarea_lineHeight === "normal") {
                lineHeight = 1.2 * 12 / 0.75;
            } else {
                lineHeight = textarea_lineHeight;
            }

            if(popup_height < $(window).height() && total_textarea_height > current_textarea_height) {
                if(total_textarea_height > $(window).height()) {
                    $element.css('height',  current_textarea_height + lineHeight);
                } else {
                    $element.css('height', total_textarea_height );
                }
            }
        }

        // 이미지 크롭
        function initCrop(w,h) {
            var $crop_target = $('#crop_target');

            // Apply jrac on some image.
            $crop_target.cropbox( {
                width		: $crop_target.attr('cropwidth'),	// crop width
                height		: $crop_target.attr('cropheight'),	// crop width
                // img_width	: w,
                // img_height	: h,
                showControls: 'auto',
                //result:{cropX:70, cropY:45, cropW:400, cropH:400}
            }).on('cropbox', function( event, results, img ) {
                var	cw = 240;
                var	ch = 240;

                $(".cropFrame").css("border-radius", "200px");

                cropdata = results;
                //$('#v_imgcrop_x').text( results.cropX );
                //$('#v_imgcrop_y').text( results.cropY );

                if(results.cropW < cw || results.cropH < ch) {
                    return false;
                } else {
                    $(".pop_pm_btn").show();
                    $(".cropControls").hide();
                }

                //download.attr('href', img.getDataURL());
            });
        }

        function uploadError(queueItem, msg) {
            queueItem.find('.fileinfo div').text("전송실패").css("color", "#FF0000");
            queueItem.removeClass("complete");
            queueItem.addClass("error");

            alert(msg);
        }

        // 팝업창에서 어두운 부분을 눌렀을 때 팝업창 닫게 처리
        $(".popup_wrap").on("click", function(e) {
            var target = e.target;
            var $this = $(this);
            var $body = $("body");
            var top = -($body.offset().top);

            if(target == $this[0]) {
                $this.removeClass("on");

                if(!$(".popup_wrap, .mypage_wrap").hasClass("on")) {
                    $body.removeClass("noscroll")
                            .css("top", "");
                    $("html, body").scrollTop(top);
                }

                snsbbs.clearFormContent();
            }
        });

        $('.login_form li input').each(function() {
            var $this = $(this);
            var $parent = $this.parent();

            $this.on('focus', function() {
                $parent.addClass('active');
            });

            $this.on('blur', function() {
                if ($this.val().length == 0) {
                    $parent.removeClass('active');
                }
            });

            if ($this.val() != '') $parent.addClass('active');
        });

        $(".gnb_wrap .menu").on('click', function(){
            var $popup_login = $("#popup_login");
            var $body = $("body");
            var top = $body.scrollTop ?
                    -($body.scrollTop()) :
                    -($("html, body").scrollTop());

            $popup_login.addClass("on");
            $popup_login.data("menu_login", true);

            $body.addClass("noscroll")
                    .offset({"top":top});
        });

        $(".mypage_close").on('click', function(){
            var $body = $("body");
            var top = -($("body").offset().top);

            $(".mypage_wrap").removeClass("on");
            $body.removeClass("noscroll")
                    .css("top", "")
            $("html, body").scrollTop(top);
        });

        $(".mypage_btn.write").on('click', function(){
            //$(".mypage_wrap").removeClass("on");
            $(".popup_login").addClass("on");

            $("body").addClass("noscroll");
        });

        $(".btn_write").on('click', function(){
            var $body = $("body");
            var top = $body.scrollTop() ?
                    -($body.scrollTop()) :
                    -($("html, body").scrollTop());

            //$(".mypage_wrap").removeClass("on");
            $(".popup_login").addClass("on");

            $body.addClass("noscroll");
            $body.css("top", top);
        });
        $(".mypage_wrap.on .recentlist_area.on").on('click', function(){
            $(".popup_read").addClass("on");
            $("body").addClass("noscroll");
        });

        $(".popemoset").on('click', function(e){
            var $contents;
            var id = $(this).attr("id");
            var emoticon_info = id.match(/(emo[0-9]+)([a-z])/, id);
            var emoticon = emoticon_info[1];
            var type = emoticon_info[2];
            var emoticon_type = "emo-type-" + type;
            var emoticon_width = "120px";
            var emoticon_height = "120px";
            var $popup_write = $("#popup_write");
            var $emo_select = $("#div_emo_select");
            var $popup_icon = $("#popup_icon");
            var select_icon = emoticon_type + " " + emoticon;
            var select_class = "emo_select";
            var hide_class = "emo_select-hide";
            var write_type = $("#popup_icon").data("write_type");
            var $body = $("body");
            var top;

            if(type == "c") {
                emoticon_width = "200px";
                emoticon_height = "136px";
            }

            if(write_type == "content") {
                $contents = $("#popup_write");

                var $textarea = $popup_write.find("textarea");
                var textarea_height = $textarea.outerHeight(true);
                var emo_height = parseInt(emoticon_height.replace("px", ""));
                var default_height = 120 + emo_height; // 120은 css상에 설정되있는 textarea height 값

                if($emo_select.height() == 0 && textarea_height > default_height) {
                    $textarea.css("height", textarea_height - emo_height);
                    $textarea.scrollTop($textarea.prop("scrollHeight"));
                }

                $("#select_icon").val(select_icon);
            } else {
                var content_id =  $popup_icon.data("content_id");
                var type =  $popup_icon.data("type");

                if(type == "default") {
                    $contents = $(".contents_list li#" + content_id);
                    $emo_select = $contents.find("#pop_emo_select");
                    $contents.data("select_icon", select_icon);
                } else {
                    $contents = $("#read_content_" + content_id);
                    $emo_select = $contents.find("#pop_emo_select");
                    $contents.data("select_icon", select_icon);
                }

                select_class = "pop_emo_select";
                hide_class = "pop_emo_select-hide";
                $("#pop_icon").data("select_icon", emoticon_type + " " + emoticon);
            }

            $emo_select.removeClass().addClass(select_class + " " + emoticon + " " + emoticon_type).removeClass(hide_class).show();
            $emo_select.css("width", emoticon_width).css("height", emoticon_height);
            $popup_icon.removeClass("on");
            $popup_icon.find(".popemo_taba").trigger("click");

            $contents.find(".write_emo").addClass("on");
            $popup_icon.removeData("write_type");

            if(!$("#popup_write, .mypage_wrap").hasClass("on")) {
                top = -($body.offset().top);
                $body.removeClass("noscroll")
                        .css("top", "")
                $("html, body").scrollTop(top);
            }
        });


        $document.on('click', "li .message_box", function(){
            var $this = $(this);
            var $parent = $this.parent();
            var $contents_list = $(".contents_list");
            var $loader = $contents_list.find(".loader");
            var $contents = $parent;
            var $comment_list = $contents.find(".comm_list");
            var $comment_box = $parent.find(".comment_box");
            var id = $contents.attr("id");

            if(snsbbs.border_target.length > 0) {
                snsbbs.border_target.removeClass("focus");
                snsbbs.border_target = "";
            }

            if(!$comment_box.hasClass("on")) {
                $comment_list.html("");

                if(!$contents.data("page")){
                    $contents.data("page", 1);
                }

                snsbbs.getComment("refresh", id).then(function(result) {
                    var comment_list = result.list;
                    var content_id = result.content_id;
                    var is_more = result.is_more;

                    $comment_box.find(".loader").remove();
                    snsbbs.makeComment(comment_list, content_id, is_more, "default");
                    grid.masonry('initLayoutItems', grid.data('masonry').items, true);


                    //grid.masonry("layout");
                });
            } else {
                $comment_list.find(".comm_prev").remove();
                $comment_list.html("");
                $contents.data("page", 1);
            }

            $comment_box.toggleClass("on");

            if(!$comment_box.hasClass("on")) {
                grid.masonry('initLayoutItems', grid.data('masonry').items, true);
                //grid.masonry("layout");
            }

        });

        $(".myprofile_upload, .hdprofile_upload").on('click', function(){
            var $pop_imgdel_btn = $(".pop_imgdel_btn");

            $(".popup_upload").addClass("on");

            if($pop_imgdel_btn.css("display") === "block") {
                $pop_imgdel_btn.hide();
            }
        });

        $(".pop_btn").on('click', function(){
            var $this = $(this);
            var popup_wrap = $this.parents(".popup_wrap");
            var type = popup_wrap.attr("id");
            var is_cancel = $this.hasClass("cancel");

            if(!is_cancel && type === "popup_del") {
                $(".popup_wrap").removeClass("on");
            } else {
                $this.parents(".popup_wrap").removeClass("on");
            }
        });

        $(".logout,.myprofile_logout").on('click', function(){
            $(".popup_logout").addClass("on");
        });

        $("#bt_close_selectimg").on('click', function(){
            $("#div_gallery_select").remove();
            $("#pop_select_img").val("");
        });

        $("#bt_close_selecticon").on('click', function(){
            var $popup_write = $("#popup_write");

            $("#select_icon").val("");
            $("#div_emo_select").removeClass().css({"width":0, "height":0}).addClass("emo_select-hide").hide();

            $popup_write.find(".write_emo").removeClass("on");
        });

        $document.on("click", "#bt_pop_close_selecticon", function() {
            var $content;
            var $this = $(this);
            var $li = $this.parents("li");

            if($li.length > 0) {
                $content = $li;
            } else {
                $content = $this.parents(".pop_read");
            }

            $content.removeData("select_icon");
            $("#select_icon").val("");
            $this.parent().removeClass().addClass("pop_emo_select-hide").hide();

            $content.find(".write_emo").removeClass("on");
        });

        $("#bt_pop_close_selecticon_48705").on('click', function(){
            $("#pop_emo_select_48705").css('display','none');
        });

        $document.on("click", "#popup_write .popup_close", function() {
            var $body = $("body");
            var top = -($body.offset().top);

            snsbbs.clearFormContent();

            $(".popup_wrap").removeClass("on");
            if(!$(".mypage_wrap").hasClass("on")) {
                $body.removeClass("noscroll")
                        .css("top", "")
                $("html, body").scrollTop(top);
            }
        });

        $("#popup_icon .popup_close").on("click", function(){
            var $popup_icon = $("#popup_icon");
            var $body = $("body");
            var top;

            $popup_icon.removeClass("on");
            $popup_icon.find(".popemo_taba").trigger("click");

            if(!$("#popup_write, .mypage_wrap").hasClass("on")) {
                top = -($body.offset().top);
                $body.removeClass("noscroll")
                        .css("top", "")
                $("html, body").scrollTop(top);
            }
        });

        $("#popup_login .popup_close").on("click", function() {
            var $popup_login = $("#popup_login");
            var $body = $("body");
            var top = -($body.offset().top);

            $(".id_area, .pw_area").removeClass("active");
            $("#nouser_name, #nouser_pwd, #userid, #userpwd").val("");
            $(".popup_wrap").removeClass("on");
            $body.removeClass("noscroll")
                    .css("top", "");
            $("html, body").scrollTop(top);

            $popup_login.removeData("comment_write");
            $popup_login.removeData("menu_login");
        });

        $("#popup_read .popup_close").on('click', function(){
            $(".popup_wrap").removeClass("on");
        });

        $('.login_tabs>li').on('click',function(){
            var tab_id = $(this).attr('data-tab');

            $('.login_tabs>li').removeClass('on');
            $(".login_area.on").find(".alert_info").html(""); // 검증 문자 삭제 처리
            $('.login_area').removeClass('on');

            $(this).addClass('on');
            $("#"+tab_id).addClass('on');

        });

        $('.headertab_tabs>li').on('click',function(){
            var $this = $(this);
            var tab_id = $this.attr('data-tab');

            $('.headertab_tabs>li').removeClass('on');
            $('.headertab_area').removeClass('on');

            $this.addClass('on');
            $("#"+tab_id).addClass('on');
        });

        $('.mypagetab_tabs>li').on('click',function(){
            var $this = $(this);
            var tab_id = $this.attr('data-tab');

            $('.mypagetab_tabs>li').removeClass('on');
            $('.mypagetab_area').removeClass('on');

            $this.addClass('on');
            $("#"+tab_id).addClass('on');
        });

        $('.popemo_tabs>li').on('click',function(){
            var $this = $(this);
            var tab_id = $this.attr('data-tab');

            $('.popemo_tabs>li').removeClass('on');
            $('.popemo_list').removeClass('on');

            $this.addClass('on');
            $("#"+tab_id).addClass('on');
        });

        $('#bt_dalpeng_login').click(function() {
            var $userid = $("#userid");
            var $userpwd = $("#userpwd");

            if(!$userid.val()){
                errLoginMsg('dalpeng','아이디를 입력해주십시요');
                $userid.focus();
                return false;
            }

            if(!$userpwd.val()){
                errLoginMsg('dalpeng','비밀번호를 입력해주십시요');
                $userpwd.focus();
                return false;
            }

            localLogin('dalpeng');
        });

        // sns 로그인
        $("#bt_Facebook, #bt_Kakao, #bt_Naver, #bt_Instagram, #bt_dpNaver").on("click", function() {
            var $popup_login = $("#popup_login");
            var provider = $(this).attr('id').replace('bt_','');
            var url = "/gardenwedding/snsbbs/login/";
            var queryString = "";

            if($popup_login.data("comment_write") || $popup_login.data("menu_login")) {
                queryString = "?type=c";
            }

            if(provider === "dpNaver") {
                queryString += queryString ? "&" : '?';
                queryString += "is_dp_member=true";

                provider = "Naver";
            }

            url = url + provider + queryString;

            location.href = url;
        });

        // 로그아웃
        $('.popup_logout .pop_btn.ok').click(function() {
            var target = "https%3A%2F%2Fdalpeng.com%2Fgardenwedding%2Fsnsbbs";

            $.ajax({
                type: 'post',
                url: '/snsbbs/logout?targetUrl=' + target,
                success: function(result) {
                    result = $.trim(result);

                    if(result == 'reload') {
                        //location.reload();
                        location.href="/gardenwedding/snsbbs";
                    } else {
                        $("body").html(result);
                    }
                },
                error: function() {
                    alert("처리 중 내부오류가 발생했습니다. 잠시후에 시도해 주십시요.");
                    location.href="/gardenwedding/snsbbs";
                    return;
                },
                timeout: 10000
            });
        });

        // 글 작성
        $document.on("click", "#popup_write .write_btn", function(){
            var $contents = $('#contents');
            var $body = $("body");
            var top = -($body.offset().top);
            var exist_gallery = $("#div_gallery_select").length > 0;

            if(!$contents.val() && !$("#select_icon").val() && !exist_gallery) {
                $contents.focus();
                return false;
            }

            if(!$(".mypage_wrap").hasClass("on")) {
                $body.removeClass("noscroll").
                css("top", "");
                $("html, body").scrollTop(top);
            }

            $(".popup_wrap").removeClass("on");

            snsbbs.write();
        });

        // 글 더보기
        $document.on("click", ".btn_more", function() {
            if(snsbbs.border_target.length > 0) {
                snsbbs.border_target.removeClass("focus");
                snsbbs.border_target = "";
            }

            snsbbs.more("content");
        });

        $document.on('click', ".del_btn", function(e) {
            var $content;
            var type, id;
            var $this = $(this);
            var $popup_del = $("#popup_del");
            var $li = $this.parents("li");

            if($li.length) {
                $content = $li;
                type = "default";
            } else {
                $content = $this.parents(".pop_read");
                type = "pop_read";
            }

            if(type === "default") {
                id = $content.attr("id");
            } else {
                id = $content.attr("id").replace("read_content_", "");
            }

            $popup_del.addClass("on");
            $popup_del.data("del_id", id);
            $popup_del.data("type", type);

            e.stopPropagation(); // .message_box로 버블링 되는 것 방지
        });

        // 글 삭제
        $("#popup_del .pop_btn.ok").on("click", function() {
            var popup_del = $("#popup_del");
            var id = popup_del.data("del_id");

            snsbbs.deleteContent(id);
            popup_del.removeData("del_id");
        });

        // 댓글 작성
        $document.on("click", ".comment_box.on .write_btn", function() {
            var parent_tag, type, content_id, icon_data_tag, select_icon;
            var reply_count_tag, reply_count;
            var data = {};
            var $this = $(this);
            var content = $this.prev().find("input").val();
            var is_popup = $this.parents(".pop_read").length;

            snsbbs.writeComment(this);
        });

        $document.on("click", ".comm_del_btn", function() {
            var $parent;
            var type, content_id;
            var comment_id = $(this).parents("li").attr("id").replace("comm_", "");
            var $comment = $("#comm_" + comment_id);
            var $popup_comment_del = $("#popup_comment_del");
            var $pop_read = $(this).parents(".pop_read");

            if($pop_read.length) {
                $parent = $pop_read;
                type = "pop_read";
            } else {
                $parent = $comment.parents("li");
                type = "default";
            }

            if(type === "default") {
                content_id = $parent.attr("id");
            } else {
                content_id = $parent.attr("id").replace("read_content_", "");
            }

            $popup_comment_del.addClass("on");
            $popup_comment_del.data("content_id", content_id);
            $popup_comment_del.data("comment_id", comment_id);
            $popup_comment_del.data("type", type);
        });

        // 댓글 삭제
        $("#popup_comment_del .pop_btn.ok").on("click", function() {
            var $popup_comment_del = $("#popup_comment_del");
            var comment_id = $popup_comment_del.data("comment_id");
            var content_id = $popup_comment_del.data("content_id");

            snsbbs.deleteComment(content_id, comment_id);

            $popup_comment_del.removeData("comment_id");
            $popup_comment_del.removeClass("on");
        });

        // 댓글 더보기
        $document.on("click", ".contents_wrap .comm_prev", function() {
            var content_id = $(this).parents("li").attr("id");
            var page = $("li#" + content_id).data("page");

            snsbbs.more("comment", content_id);
        });

        // 글 추적
        $document.on("click", ".headertab_area ul>li", function() {
            var $this = $(this);
            var id = $this.attr("id");
            var data_content_id = $this.attr("data-content-id");
            var recent_id = data_content_id ? data_content_id : id.replace("content_", "");
            var result = /([a-zA-Z]+)_([0-9]+)/.exec(id);
            var type = result[1];
            var comment_id = result[2];
            var content = $("#" + recent_id);
            var comment_box = content.find(".comment_box");
            var exist_content = content.length == 1 ? true : false;
            var contents_list = $(".contents_list>li:not(.loader)");
            var content_last_id = contents_list.last().attr("id");
            var loading = '<div class="loader" style="text-align:center;">'
                    + '<div class="contents_loader"></div>'
                    + '</div>';
            var request = $.Deferred();
            var contents_wrap = $(".contents_wrap");
            var contents_loader = $(".contents_list .loader");


            request.resolve();

            var request_data = {
                "dn": $("#dn").val(),
                "target": recent_id,
                "content_last_id": content_last_id
            }

            if(!exist_content && !snsbbs.search_content) {
                snsbbs.search_content = true; // 중복 요청 방지
                request = snsbbs.getContent(request_data).then(function(result) {
                    var current_page = Math.floor(((contents_list.length + result.list.length) / 10) + 1);

                    $("#nowpage").val(current_page);
                    snsbbs.makeContent(result.list, "more");

                    $(".contents_list").find(".contents_loader").parent().remove();
                    return result;
                });
            }

            if(type === "comment") {
                var comment_last_id, comment_list;
                var exist_comment = false;
                var dom_comment_count = 0;
                var comment_waitbar = '<li class="loader">' +
                        '<div class="comment_loader"></div>' +
                        '</li>';

                exist_comment = comment_box.find("#comm_" + comment_id).length ? true : false;
                comment_list = comment_box.find(".comm_list li");
                dom_comment_count = comment_list.length;
                comment_last_id = comment_list.last().attr("id");

                if(comment_last_id) {
                    comment_last_id = comment_last_id.replace("comm_", "");
                }

                if(!exist_comment && !snsbbs.search_comment) {
                    snsbbs.search_comment = true; // 중복 요청 방지
                    request = request.then(function(result) {
                        return $.ajax({
                            type: 'post',
                            dataType: "json",
                            url	: '/snsbbs/getDetailList',
                            data : {
                                'dn': $("#dn").val(),
                                'sn': recent_id,
                                'target': comment_id,
                                'dccnt': dom_comment_count,
                                'comment_last_id': comment_last_id
                            },
                            beforeSend: function() {
                                comment_box.find(".comm_prev").remove();

                                /*if(dom_comment_count > 0) {
                                 comment_box.append(comment_waitbar);
                                 } else {
                                 comment_box.prepend(comment_waitbar);
                                 }*/
                            },
                            complete: function(ajax) {
                                //comment_box.find(".loader").remove();
                            },
                            timeout: 10000
                        })
                    }).then(function(result) {
                        var list_count, page;
                        var makeType = dom_comment_count > 0 ? "more" : "refresh";
                        var list = result.list;
                        var content_id = result.content_id;
                        var is_more = result.is_more;

                        content = $("#" + recent_id);
                        comment_box = content.find(".comment_box");
                        comment_box.addClass("on");

                        snsbbs.makeComment(list, content_id, is_more, makeType, "default");

                        list_count = comment_box.find(".comm_list li").length;
                        page = Math.ceil(list_count / snsbbs.COMMENT_PER_PAGE);

                        if(list_count % snsbbs.COMMENT_PER_PAGE === 0) {
                            page += 1;
                        }

                        content.data("page", page);

                        return result;
                    });
                }
            }

            request.then(function(result) {
                var target, offsetTop, target_height;
                var message_box = content.find(".message_box");
                var sorted;

                if(type === "content") {
                    target = $(".contents_list li#" + recent_id);
                } else {
                    target = $("#comm_" + comment_id);
                }

                if(!exist_content || (type === "comment" && !exist_comment)) {
                    sorted = grid.imagesLoaded().always( function() {
                        grid.masonry('initLayoutItems', grid.data('masonry').items, true);
                    });
                }

                if(type === "content" && exist_content) {
                    offsetTop = content[0].offsetTop - 350;
                } else {
                    var prev_comment_list = target.prevAll("li")
                    var comment_height = 0;
                    var sorted_offset;

                    if(sorted != undefined) {
                        sorted_offset = sorted.always(function() {
                            offsetTop = $("#" +recent_id)[0].offsetTop;

                            comment_height += content.find(".message_box").height();
                            comment_height += comment_box.find(".write_area").height();

                            $.each(prev_comment_list, function(k, comment) {
                                comment_height += $(comment).height();
                            });

                            offsetTop += comment_height;
                        });
                    } else {
                        offsetTop = $("#" +recent_id)[0].offsetTop;

                        comment_height += content.find(".message_box").height();
                        comment_height += comment_box.find(".write_area").height();

                        $.each(prev_comment_list, function(k, comment) {
                            comment_height += $(comment).height();
                        });

                        offsetTop += comment_height;
                    }
                }

                if(sorted_offset != undefined) {
                    sorted_offset.always(function() {
                        snsbbs.scrolling(target, offsetTop);
                    });
                } else {
                    snsbbs.scrolling(target, offsetTop);
                }

                snsbbs.search_content = false;
                snsbbs.search_comment = false;
            });
        });

        // 메뉴 새 글, 새 댓글 클릭 시 상세 내용 보기
        $document.on('click', ".mypagetab_area ul li", function(){
            var $this = $(this);
            var PER_PAGE = 5;
            var content_id, comment_id;
            var id = $this.attr("id");
            var result = /([a-zA-Z]+)_([0-9]+)/.exec(id);
            var type = result[1];
            var dn = $("#dn").val();

            if(type == "content") {
                content_id = result[2];
            } else if(type == "comment") {
                comment_id = result[2];
                content_id = $this.attr("data-content-id");
            }

            $.ajax({
                type: 'post',
                dataType: "json",
                url	: '/snsbbs/getContent',
                data : {
                    "dn" : dn,
                    "content_id" : content_id,
                    "comment_id" : comment_id,
                    "type" : type
                },
                success: function(result) {
                    var content = result.content;
                    var comment = result.comment;

                    if(type === "content") {
                        if(result.length < 1) {
                            $("#popup_read").removeClass("on");
                            alert("해당 글이 존재하지 않습니다.");
                            snsbbs.init();

                            return false;
                        }
                    } else {
                        var exist_comment = false;

                        $.each(comment, function() {
                            if(this.id == comment_id) {
                                exist_comment = true;

                                return false;
                            }
                        });

                        if(!exist_comment) {
                            $("#popup_read").removeClass("on");
                            alert("해당 댓글이 존재하지 않습니다.");
                            snsbbs.init();

                            return false;
                        }
                    }

                    var is_more = false;
                    var total_comment_count = content.comment_count;
                    var $prev = $(".pop_read .ico-prev");
                    var $next = $(".pop_read .ico-next");
                    var page, comment_count;
                    var exist_prev, exist_next;
                    var $target;
                    var comment_top;

                    if(result.comment) {
                        comment_count = comment.length;

                        if(total_comment_count > comment_count) {
                            is_more = true;
                        }

                        if(comment_count > 0) {
                            page = Math.ceil(comment_count / snsbbs.COMMENT_PER_PAGE);

                            // 기본 댓글 불러오는 개수인 5개를 넘지 않으면 page 값을 올리지 않음.
                            if(comment_count % snsbbs.COMMENT_PER_PAGE === 0) {
                                page += 1;
                            }
                        } else {
                            page = 1;
                        }

                        snsbbs.makeComment(comment, content_id, is_more, "refresh", "pop_read");

                    } else {
                        $(".pop_read .comment_box").removeClass("on");
                        $(".pop_read .comm_list").html("");
                    }

                    if(type === "content") {
                        $target = $("#content_" + content_id);
                    } else {
                        $target = $("#comment_" + comment_id);
                    }

                    exist_prev = $target.next().length;
                    exist_next = $target.prev().length;

                    if(!exist_next) {
                        $next.hide();
                    } else {
                        $next.show();
                    }

                    if(!exist_prev) {
                        $prev.hide();
                    } else {
                        $prev.show();
                    }

                    $(".pop_read").attr("id", "read_content_" + content.id);

                    $("#read_content_" + content_id).data("total_comment_count", total_comment_count);
                    $("#read_content_" + content_id).data("page", page);
                    $(".popup_read").data("type", type)

                    if(type === "comment") {
                        $(".popup_read").data("comment_id", comment_id);
                    }

                    var rendered = "";
                    var template = $("#tmpl-view-content").html();
                    var data = {
                        "profileSrc" : content.profile_path,
                        "emoticon" : content.emoticon,
                        "galleryId" : content.gallery_id,
                        "gallerySrc" : content.gallery_path,
                        "provider" : content.provider,
                        "name" : content.user_name,
                        "contents" : content.contents,
                        "deletable" : content.deletable,
                        "date" : content.regdate,
                        "commentCount" : content.comment_count
                    };

                    Mustache.parse(template);
                    rendered = Mustache.render(template, data);

                    $(".pop_read .message_box").html(rendered);

                    $(".pop_read").find(".comment_box").removeClass("on");

                    if(snsbbs.border_target.length > 0) {
                        snsbbs.border_target.removeClass("focus");
                        snsbbs.border_target = "";
                    }

                    if(comment) {
                        $(".pop_read").find(".comment_box").addClass("on");

                        $(".pop_read").find("#comm_" + comment_id).addClass("focus");
                        snsbbs.border_target = $(".pop_read").find("#comm_" + comment_id);

                        comment_top = $(".pop_read").find("#comm_" + comment_id).position().top;
                        $('#popup_read').scrollTop(comment_top);

                    }
                }
            });

            $(".popup_read").addClass("on");
        });


        // 글 보기에서 이전 글, 다음 글 보기
        $(".popup_read .ico-prev, .popup_read .ico-next").on("click", function() {
            var $this = $(this);
            var role = $this.attr("class").replace("ico-", "");
            var type = $(".popup_read").data("type");
            var dn = $("#dn").val();
            var $target, $prev_next;
            var id, content_id, comment_id, prev_next_id;
            var exist_target;
            var type_str;

            if(type === "content") {
                id = $this.parents(".pop_read").attr("id").replace("read_content_", "");
                $target = $("#content_" + id);
                type_str = "글";
            } else {
                id = $(".popup_read").data("comment_id");
                $target = $("#comment_" + id);
                type_str = "댓글";
            }

            if(role === 'next') {
                $prev_next = $target.prev();
                exist_target = $target.prev().length;
            } else {
                $prev_next = $target.next();
                exist_target = $target.next().length;
            }

            if(exist_target) {
                if(type === "content") {
                    content_id = $prev_next.attr("id").replace("content_", "");
                } else {
                    content_id = $prev_next.attr("data-content-id");
                    comment_id = $prev_next.attr("id").replace("comment_", "");
                }
            } else {
                alert("해당하는 " + type_str + "이 존재하지 않습니다.");
                return false;
            }

            $.ajax({
                type: 'post',
                dataType: "json",
                url	: "/snsbbs/getContent",
                data : {
                    "dn" : dn,
                    "content_id" : content_id,
                    "comment_id" : comment_id,
                    "role" : role,
                    "type" : type,
                },
                success: function(result) {
                    var content = result.content;
                    var comment = result.comment;

                    if(type === "content") {
                        if(result.length < 1) {
                            alert("해당 글이 존재하지 않습니다.");
                            snsbbs.init();

                            return false;
                        }
                    } else {

                        var exist_comment = false;

                        $.each(comment, function() {
                            if(this.id == comment_id) {
                                exist_comment = true;

                                return false;
                            }
                        });

                        if(!exist_comment) {
                            alert("해당 댓글이 존재하지 않습니다.");
                            snsbbs.init();

                            return false;
                        }
                    }

                    if(!$.isEmptyObject(result)) {
                        var more_tag = '<div class="comm_prev hide" id="comment_more_'+ content_id +'" style="display: block;">'
                                + '<img src="/img/snsbbs/ico_btn_comm1.png" id="comment_more_' + content_id + '" alt="댓글 더보기" style="vertical-align:middle;">'
                                + '<span style="">이전 댓글 보기</span>'
                                + '</div>';
                        var is_more = false;
                        var total_comment_count = content.comment_count;
                        var $prev = $(".pop_read .ico-prev");
                        var $next = $(".pop_read .ico-next");
                        var page, comment_count;
                        var $target;
                        var exist_prev, exist_next;
                        var comment_top;


                        if(result.comment) {
                            comment_count = comment.length;

                            if(total_comment_count > comment_count) {
                                is_more = true;
                            }

                            if(comment_count) {
                                page = Math.ceil(comment_count / snsbbs.COMMENT_PER_PAGE)

                                if(comment_count % snsbbs.COMMENT_PER_PAGE === 0) {
                                    page += 1;
                                }
                            } else {
                                page = 1;
                            }

                            snsbbs.makeComment(comment, content_id, is_more, "refresh", "pop_read");
                        } else {
                            $(".pop_read .comment_box").removeClass("on");
                            $(".pop_read .comm_list").html("");
                        }

                        if(type === "content") {
                            $target = $("#content_" + content_id);
                        } else {
                            $target = $("#comment_" + comment_id);
                        }

                        exist_prev = $target.next().length;
                        exist_next = $target.prev().length;

                        if(!exist_next) {
                            $next.hide();
                        } else {
                            $next.show();
                        }

                        if(!exist_prev) {
                            $prev.hide();
                        } else {
                            $prev.show();
                        }

                        $(".pop_read").attr("id", "read_content_" + content.id);

                        $("#read_content_" + content_id).data("total_comment_count", total_comment_count);
                        $("#read_content_" + content_id).data("page", page);

                        $(".popup_read").data("type", type);

                        if(type === "comment") {
                            $(".popup_read").data("comment_id", content.np_comment_id);
                        }

                        var template = $("#tmpl-view-content").html();
                        var data = {
                            "profileSrc" : content.profile_path,
                            "emoticon" : content.emoticon,
                            "galleryId" : content.gallery_id,
                            "gallerySrc" : content.gallery_path,
                            "provider" : content.provider,
                            "name" : content.user_name,
                            "contents" : content.contents,
                            "deletable" : content.deletable,
                            "date" : content.regdate,
                            "commentCount" : content.comment_count
                        };
                        var rendered = "";

                        Mustache.parse(template);
                        rendered = Mustache.render(template, data);
                        $(".pop_read .message_box").html(rendered);

                        $(".pop_read").find(".comment_box").removeClass("on");

                        if(snsbbs.border_target.length > 0) {
                            snsbbs.border_target.removeClass("focus");
                            snsbbs.border_target = "";
                        }

                        if(result.comment) {
                            $(".pop_read").find(".comment_box").addClass("on");
                            $(".pop_read").find("#comm_" + comment_id).addClass("focus");
                            snsbbs.border_target = $(".pop_read").find("#comm_" + comment_id);

                            comment_top = $(".pop_read").find("#comm_" + comment_id).position().top;
                            $('#popup_read').scrollTop(comment_top);
                        }
                    }
                }
            });
        });

        // 글보기에서 댓글 리스트 보기
        $document.on("click", ".pop_read .message_box", function(e) {
            var content_id = $(this).parent().attr("id").replace("read_content_", "");
            var comment_box = $(this).next();

            if(snsbbs.border_target.length > 0) {
                snsbbs.border_target.removeClass("focus");
                snsbbs.border_target = "";
            }

            $("#read_content_" + content_id).data("page", 1);

            if(!comment_box.hasClass("on")) {
                $.when(snsbbs.getComment('refresh', content_id, "pop_read")).then(function(result) {
                    var comment_list = result.list;
                    var is_more = result.is_more;
                    var makeType = "get";

                    comment_box.find(".loader").remove();
                    snsbbs.makeComment(comment_list, content_id, is_more, makeType, "pop_read");
                });
            } else {
                $(".pop_read .comm_list").html("");
            }

            comment_box.toggleClass("on");
        });

        // 글보기에서 댓글 더보기
        $document.on("click", ".pop_read .comm_prev", function() {
            var content_id = $(this).attr("id").replace("comment_more_", "");
            var read_content = $("#read_content_" + content_id);
            var comment_box = read_content.find(".comm_list");
            var page = parseInt(read_content.data("page"));
            var comment_count = $(".pop_read .comm_list li").length;
            var remainder = comment_count % snsbbs.COMMENT_PER_PAGE;
            var total_comment_count = read_content.data("total_comment_count");

            if(total_comment_count > comment_count) {
                snsbbs.getComment("more", content_id, "pop_read").then(function(result) {
                    if(snsbbs.border_target.length > 0) {
                        snsbbs.border_target.removeClass("focus");
                        snsbbs.border_target = "";
                    }

                    comment_box.find(".loader").remove();
                    snsbbs.makeComment(result.list, content_id, result.is_more, "more", "pop_read");
                });
            }
        });


        $(".ico-plus").on("click", function() {
            $(".cropFrame .cropControls .cropZoomIn").trigger("click");
        });

        $(".ico-minus").on("click", function() {
            $(".cropFrame .cropControls .cropZoomOut").trigger("click");
        });

        // 프로필 업로드
        $(".pop_upload_btn").on("click", function() {
            $("#uploadifive-upload input[type=file]").last().trigger("click");
        });

        $(".pop_imgdel_btn").on("click", function() {
            $(".pop_imgdel_btn").css("cursor", "").hide();
            $(".pop_upload_img").removeClass("uploaded")
                    .css("background-image", "url("+background_img+")").html("");
            $(".pop_pm_btn").hide();
        });

        $(".pop_btn.cancel").on("click", function() {
            $(".pop_imgdel_btn").trigger("click");
        });

        $(".popup_upload .pop_btns .pop_btn.ok").on("click", function() {
            var profile_path = $(".pop_upload_img img").attr("src");
            var cropimgpath;

            if(profile_path && profile_path !== "/img/snsbbs/profile_noimg.png") {
                var fileinfo = {
                    id : "",
                    filename : croptarget
                }

                $.ajax({
                    type: "post",
                    dataType: "json",
                    url: "/member/cropProfile",
                    data: { cropdata : cropdata, fileinfo : fileinfo },
                }).then(function(result) {
                    cropimgpath = result.cropimgpath;

                    $(".myprofile_img").data("profile_img", result.cropimg);
                    $(".pop_imgdel_btn").trigger("click");

                    return $.ajax({
                        type: "post",
                        url: "/member/proc_change",
                        dataType: "json",
                        data: {
                            "profile_img" : result.cropimg,
                            "token" : ""
                        }
                    });

                }).then(function(result) {
                    $(".myprofile_img img").attr("src", cropimgpath);
                    $("#popup_write .profile_img img").attr("src", cropimgpath);
                });
            } else {
                if($(".myprofile_img img").attr("src") === "/img/snsbbs/profile_noimg.png") {
                    return false;
                }

                $.ajax({
                    type: "post",
                    url: "/member/proc_change",
                    dataType: "json",
                    data: {
                        "profile_img" : "",
                        "token" : ""
                    },
                    success: function(result) {
                        $(".myprofile_img img").attr("src", "/img/snsbbs/profile_noimg.png");
                        $(".myprofile_img").data("profile_img", "");

                        $(".pop_imgdel_btn").trigger("click");
                    }
                });
            }
        });

        $("#upload").uploadifive({
            method: "post",
            formData: {
                'mb_uid': '',
                'token': ''
            },
            auto: true,
            multi: false,
            removeTimeout: 0,
            buttonText: "파일 찾기",
            fileType: "image/*",
            fileTypeDesc: "Image Files",
            fileTypeExts: "*.gif; *.jpg; *.png",
            uploadScript: "/member/uploadProfile",
            width: 0,
            height: 0,
            queueID: 'upload_queue',
            onUpload: function() {
                $('#upload_queue').slideDown();
            },
            onUploadComplete: function(file, data) {
                var queueItem = file.queueItem;

                if(data === "request_error") {
                    uploadError(queueItem, "새로고침 후 다시 시도해주세요.");
                    return false;
                }

                if(data === "filetype_error") {
                    uploadError(queueItem, "허용되지 않는 파일 타입을 업로드하셨습니다. \nGIF, JPG, JPEG, PNG만 업로드 가능합니다.");
                    return false;
                }

                var data = JSON.parse(data);
                var id = data.id;
                var email_type = data.email_type;
                var fileinfo = data.info.split("[!$!]");
                var width = fileinfo[2];
                var height = fileinfo[3];
                var filename = fileinfo[0];
                var img = $('<img />', {
                    id : "crop_target",
                    src : "/user/email/" + email_type + "/" + id + "/img/" + filename,
                    cropwidth : 240,
                    cropheight : 240,
                });

                setTimeout(function() {
                    $('#upload').uploadifive('clearQueue');
                    $('#upload_queue').slideUp();
                }, 1000);


                $(".pop_upload_img").addClass("uploaded")
                        .css("background-image", "none").html(img);

                $(".pop_imgdel_btn").css("cursor", "pointer").show();

                initCrop(width, height);

                croptarget = filename;
            },
            onError: function(errorType) {
            }
        });

        $document.on('keyup keydown', "#contents", function (e) {
            setPopupHeight($(this));
        })

        // 익스에서 여러줄의 문자열을 복사했을 때 제대로 입력되게 처리
        if (window.clipboardData) {
            $document.on("paste", ".write_input input", function (e) {
                var clipped = window.clipboardData.getData('Text');

                clipped = clipped.replace(/(\r\n|\n|\r)/gm, " ");
                $(this).val(clipped);
                return false;
            });
        }

        $(".gnb_wrap .write").on('click', function(){
            var $body = $("body");
            var top = $body.scrollTop() ?
                    -($body.scrollTop()) :
                    -($("html, body").scrollTop());

            $(".popup_login").addClass("on");
            $body.addClass("noscroll")
                    .offset({"top": top});
        });

        $document.on('click', ".nocomment_txt", function(){
            $(".popup_login").addClass("on");
            $("body").addClass("noscroll");
        });

        $document.on('click', ".header_write", function(){
            var $body = $("body");
            var top = $body.scrollTop() ?
                    -($body.scrollTop()) :
                    -($("html, body").scrollTop());

            $(".popup_login").addClass("on");
            $body.addClass("noscroll")
                    .offset({"top": top});
        });

        $document.on("click", ".write_area", function() {
            var $popup_login = $("#popup_login");

            $popup_login.addClass("on");
            $popup_login.data("comment_write", true);
            $("body").addClass("noscroll");
        });




        if(!(/^file:/.test(window.location.protocol))) {
            snsbbs.init();
        } else {
            snsbbs.masonry_init(grid);
        }

        $("#nouser_name").on("click", function(e) {

        });
    });


    (function(global, factory) {
        global.snsbbs = {};
        factory(global.snsbbs)
    })(this, function snsbbsfactory(snsbbs) {
        var grid = $(".contents_list");

        snsbbs.CONTENT_TAB = 1;
        snsbbs.COMMENT_TAB = 2;
        snsbbs.DEFAULT_PAGE = 1;
        snsbbs.CONTENT_PER_PAGE = 10;
        snsbbs.COMMENT_PER_PAGE = 5;

        snsbbs.search_content = false;
        snsbbs.search_comment = false;

        snsbbs.type = null;
        snsbbs.total_list_count = 0;
        snsbbs.total_page = 0;
        snsbbs.content_id = null;
        snsbbs.comment_id = null

        snsbbs.border_target = "";

        snsbbs.recent_content = {};
        snsbbs.recent_comment = {};

        snsbbs.clearFormContent = function(){
            var $write_emo = $("#popup_write .write_emo");

            if($write_emo.hasClass("on")) {
                $write_emo.removeClass("on");
            }

            $('#select_icon,#contents').val('');
            $('#div_emo_select').hide();
            $("#popup_write .text_area").find("textarea").height("");
        }

        snsbbs.clearFormComment = function(id, type) {
            var $comment_box;

            if(type === "default") {
                $comment_box = $("li#" + id + " .comment_box");
            } else {
                $comment_box = $("#read_content_" + id + " .comment_box");
            }

            $comment_box.find(".write_area input").val("");
            $comment_box.find(".pop_emo_area #bt_pop_close_selecticon").trigger("click");
        }

        snsbbs.getContent = function(request_data) {
            var $contents_wrap = $(".contents_wrap");
            var $contents_list = $(".contents_list");

            return $.ajax({
                type: 'post',
                dataType: "json",
                url	: '/snsbbs/getList',
                data : request_data,
                beforeSend: function () {
                    var $loader = $(".loader");
                    var loader_height = $loader.outerHeight(true);
                    var loader_str_height = $loader.find(".ico-more").height();
                    var loading = '<div class="loader" style="text-align:center;">' +
                            '<div class="contents_loader"></div>' +
                            '</div>';
                    var top = 0;

                    if($loader.length) {
                        top = $loader.position().top + loader_str_height;
                    }

                    if($contents_wrap.find(".loader").length) {
                        $contents_wrap.find(".loader").remove();
                    }

                    $contents_list.append(loading);

                    $loader = $(".loader");
                    $loader.find(".contents_loader").css({"position": "absolute", "left": "50%", "top": top });
                },
                complete: function(ajax){
                },
                timeout: 10000
            });
        }


        snsbbs.testGetContent = function(type) {
            var page;
            var $contents_wrap = $(".contents_wrap");
            var $contents_list = $(".contents_list");
            var $nowpage = $("#nowpage");
            var list_count = $contents_list.find(">li:not(.loader)").length;
            var last_content_id = 0;

            /* 밑의 보더링 함수를 실행했을 때, 해당하는 글까지만 글을 불러오기 때문에 기존의 10개씩 불러오는 방식이 아니라서 다음 번에 글을 가져올 때 그 나머지 값만 가져오게 해주는 나머지 값 변수 */
            var remainder = list_count % this.CONTENT_PER_PAGE;

            if(type !== "more") {
                remainder = 0;
                $nowpage.val(this.DEFAULT_PAGE);
            } else {
                last_content_id = parseInt($contents_list.find(">li:not(.loader)").last().attr("id"));
            }

            page = $nowpage.val();

            return $.ajax({
                type: 'post',
                dataType: "json",
                url	: 'snsbbs/getList',
                data : {
                    'dn': $('#dn').val(),
                    'np': page,
                    'rm': remainder,
                    'last_id' : last_content_id
                },
                beforeSend: function () {
                    var $loader = $(".loader");
                    var loader_height = $loader.outerHeight(true);
                    var loader_str_height = $loader.find(".ico-more").height();
                    var loading = '<div class="loader" style="text-align:center;">' +
                            '<div class="contents_loader"></div>' +
                            '</div>';
                    var top = 0;

                    if($loader.length) {
                        top = $loader.position().top + loader_str_height;
                    }

                    if($contents_wrap.find(".loader").length) {
                        $contents_wrap.find(".loader").remove();
                    }

                    $contents_list.append(loading);

                    $loader = $(".loader");
                    $loader.find(".contents_loader").css({"position": "absolute", "left": "50%", "top": top });
                },
                complete: function(ajax){
                    $contents_list.find(".contents_loader").parent().remove();
                },
                timeout: 10000
            });
        }

        snsbbs.testGetComment = function(request_data) {
            return $.ajax({
                type: 'post',
                dataType: "json",
                url: '/snsbbs/getDetailList',
                data: request_data,
                beforeSend: function() {
                    var comment_waitbar = '<li class="loader">' +
                            '<div class="comment_loader"></div>' +
                            '</li>';

                    if(type == "more") {
                        $comment_listbox.append(comment_waitbar);
                        $comment_listbox.find(".comm_prev").remove();
                    } else {
                        $comment_listbox.prepend(comment_waitbar);
                    }
                },
                complete: function(ajax) {
                    var $page, page;

                    if(selector === "pop_read") {
                        $page = $read_content;
                        page = $page.data("page");
                    } else {
                        $page = $li;
                        page = $page.data("page");
                    }

                    if(ajax.status === 200) {
                        $page.data("page", page + 1);
                    }

                    $comment_listbox.find(".loader").remove();
                },
                timeout: 10000
            });
        }

        snsbbs.getComment = function(type, id, selector) { // selector 부분 너무 어색함 수정하기 바람
            var $comment_listbox;
            var page = 1;
            var remainder = 0;
            var list_count = 0;
            var current_comment_count = 0;
            var $li = $("#" + id);
            var $read_content = $("#read_content_" + id);

            if(type === "refresh") {
                $li.find(".comm_list").html("");
                $read_content.find(".comm_list").html("");
            }

            if(selector === "pop_read") {
                page = $read_content.data("page");
                $comment_listbox = $read_content.find(".comm_list");
                list_count = $comment_listbox.find("li").length;
            } else {
                page = $li.data("page");
                $comment_listbox = $li.find(".comm_list");
                list_count = $comment_listbox.find("li").length;
            }

            remainder = list_count % this.COMMENT_PER_PAGE;
            current_comment_count = $comment_listbox.find("li").length;

            return $.ajax({
                type: 'post',
                dataType: "json",
                url	: '/snsbbs/getDetailList',
                data : {
                    'sn': id,
                    'np': page,
                    'rm': remainder,
                    'dccnt': current_comment_count
                },
                beforeSend: function() {
                    var comment_waitbar = '<li class="loader">' +
                            '<div class="comment_loader"></div>' +
                            '</li>';

                    if(type == "more") {
                        $comment_listbox.append(comment_waitbar);
                        $comment_listbox.find(".comm_prev").remove();
                    } else {
                        $comment_listbox.prepend(comment_waitbar);
                    }
                },
                complete: function(ajax) {
                    var $page, page;

                    if(selector === "pop_read") {
                        $page = $read_content;
                        page = $page.data("page");
                    } else {
                        $page = $li;
                        page = $page.data("page");
                    }

                    if(ajax.status === 200) {
                        $page.data("page", page + 1);
                    }
                    //$comment_listbox.find(".loader").remove();
                },
                timeout: 10000
            });
        }

        snsbbs.getRequestData = function(article_type, type, id) {
            var request_data = {};

            if(article_type === "content") {
                if(type === "default") {

                } else {
                    var $contents_list = $(".contents_list");
                    var list_count = $contents_list.find(">li:not(.loader)").length;
                    var last_content_id = parseInt($contents_list.find(">li:not(.loader)").last().attr("id"));
                    var remainder = list_count % this.CONTENT_PER_PAGE;

                }

                request_data = {

                };
            } else {
                var $comment_box;
                var page = 1;
                var remainder = 0;
                var list_count = 0;
                var current_comment_count = 0;
                var $li = $("#" + id);
                var $read_content = $("#read_content_" + id);

                if(type === "refresh") { // 나중에 분리
                    $li.find(".comm_list").html("");
                    $read_content.find(".comm_list").html("");
                }

                if(type === "default") {
                    page = $li.data("page");
                    $comment_box = $li.find(".comm_list");
                } else {
                    page = $read_content.data("page");
                    $comment_box = $read_content.find(".comm_list");

                }

                list_count = $comment_box.find("li").length;
                remainder = list_count % this.COMMENT_PER_PAGE;
                current_comment_count = $comment_listbox.find("li").length;

                request_data = {
                    "sn": id,
                    "np": page,
                    "rm": remainder,
                    "dccnt": current_comment_count,
                    "comment_box" : $comment_box
                };
            }

            return request_data;
        }

        snsbbs.getRecentContent = function() {
            return $.ajax({
                type: 'post',
                dataType: "json",
                url	: '/snsbbs/getRecentContent',
                data : {
                    'dn': $('#dn').val(),
                    'np':$("#nowpage").val()
                },
                beforeSend: function() {
                },
                complete: function() {
                },
                timeout: 10000
            });
        }

        snsbbs.getRecentComment = function() {
            return $.ajax({
                type: 'post',
                dataType: "json",
                url	: '/snsbbs/getRecentComment',
                data : {
                    'dn': $('#dn').val(),
                    'np': $("#nowpage").val()
                },
                beforeSend: function() {
                },
                complete: function(){
                },
                timeout: 10000
            });
        }

        snsbbs.setCommentPage = function() {
            var page, content;
            var $contents = $(".contents_list").find("li");

            $.each($contents, function(k, content) {
                page = $(content).data("page");
                content = $(content);

                if(page) {
                    content.data("page", page);
                } else {
                    content.data("page", 1);
                }
            });
        }

        snsbbs.makeContent = function(result, makeType) {
            var $template, $content_list_area, current_page, more;
            var rendered = "";
            var fragment = document.createDocumentFragment();

            if(makeType !== "more" && result.length == 0){
                if(grid.data('masonry') != undefined) {
                    grid.masonry('destroy');
                }

                rendered = "";
                rendered = '<div class="message_box">' +
                        '<div class="nocomment_txt">' +
                        '<span class="ico-pencil">방명록에 메시지를 남겨주세요!</span>' +
                        '</div>' +
                        '</div>';

                $(".contents_list").html(rendered).addClass("nocomment");

                return "nocomment";
            }

            $template = $('#tmpl-content').html();
            Mustache.parse($template);

            $.each(result, function(k, data) {
                if(data.profile_path == "") data.profile_path = "/img/snsbbs/nouser.png";

                var data = {
                    "id" : data.id,
                    "name" : data.user_name,
                    "contents" : data.contents,
                    "provider" : data.provider,
                    "profileSrc" : data.profile_path,
                    "emoticon" : data.emoticon,
                    "galleryId" : data.gallery_id,
                    "gallerySrc" : data.gallery_path,
                    "date" : data.regdate,
                    "commentCount" : data.comment_count,
                    "deletable" : data.deletable
                }

                data.isLogin = false;
                data.placeholder = "로그인 후 사용 가능합니다.";


                fragment.appendChild($(Mustache.render($template, data))[0]);
            });

            current_page = $("#nowpage").val();
            more = '<li class="loader cloak">' +
                    '<div class="btn_more"><span class="ico-more">더보기 <i>' + current_page + '/' + snsbbs.total_page + '</i></span></div>' +
                    '</li>';
            $content_list = $(".contents_wrap .contents_list");

            var content_list = $content_list[0];
            var list_count = $content_list.find("li").length;
            var get_list_count = result.length;
            var current_list_count = list_count + get_list_count;

            if(snsbbs.total_list_count > current_list_count) {
                fragment.appendChild($(more)[0]);
            }

            var $fragment = $(fragment.querySelectorAll("li"));
            var $rendered = $(rendered);
            var items;

            if(makeType === "more") {
                grid[0].appendChild(fragment);
                items = grid.masonry("addItems", $fragment);

                //grid.masonry("layoutItems", items, true);
                //grid.masonry("appended", $fragment);
            } else {
                var gutter = '<div class="gutter"></div>';
                var content_size = '<div class="content_size"></div>';
                var option = [gutter, content_size];

                grid = snsbbs.masonry_init(grid);

                if($content_list.hasClass("nocomment")) {
                    $content_list.removeClass("nocomment");
                }

                grid.html(option);
                grid[0].appendChild(fragment);
                items = grid.masonry("addItems", $fragment);

                //grid.masonry("layoutItems", items, true);
                //grid.masonry("appended", $fragment);
            }

            this.setCommentPage()

            return rendered;

        }

        snsbbs.makeComment = function(result, id, is_more, makeType, selector_type) {
            var more_tag, $selector, $comment_box, $comm_list;
            var $template = $('#tmpl-comment').html();
            var rendered = "";
            var data = {};
            var $fragment = $(document.createDocumentFragment());

            if(result === undefined) {
                return false;
            }

            Mustache.parse($template);

            $.each(result, function(k, comment) {
                if(comment.profile_path == "") comment.profile_path = "/img/snsbbs/nouser.png";

                data = {
                    "id" : comment.id,
                    "name" : comment.user_name,
                    "contents" : comment.contents,
                    "date" : comment.regdate,
                    "provider" : comment.provider,
                    "profileSrc" : comment.profile_path,
                    "emoticon" : comment.emoticon,
                    "deletable" : comment.deletable
                }

                $fragment.append(Mustache.render($template, data));
            });

            if($(".contents_list li#" + id).data("selector")) {
                $selector = $(".contents_list li#" + id);
                selector_type = $selector.data("selector");
                $selector.removeData("selector");
            }

            if($("#read_content_" + id).data("selector")) {
                $selector = $("#read_content_" + id);
                selector_type = $selector.data("selector");
                $selector.removeData("selector");
            }

            if(is_more) {
                more_tag = '<div class="comm_prev hide" id="comment_more_'+ id +'" style="display: block;">'
                        + '<img src="/img/snsbbs/ico_btn_comm1.png" id="comment_more_' + id + '" alt="댓글 더보기" style="vertical-align:middle;">'
                        + '<span style="">이전 댓글 보기</span>'
                        + '</div>'

                $fragment.append(more_tag);
            }

            if(selector_type === "pop_read") {
                $comment_box = $(".pop_read");
            } else {
                $comment_box =  $("#" + id);
            }

            $pop_read = $(".pop_read");
            $pop_read_list = $pop_read.find(".comm_list");
            $li = $("#" + id);
            $li_list = $li.find(".comm_list");
            $comm_list = $comment_box.find(".comm_list");

            if(makeType == "more") {
                if(selector_type === "pop_read") {
                    $pop_read_list.append($fragment.clone());

                    if($li.find(".comment_box").hasClass("on")) {
                        $li_list.append($fragment)
                    }
                } else {
                    $li_list.append($fragment)
                }
            } else {
                if(selector_type === "pop_read") {
                    $pop_read_list.find("li").remove();
                    $pop_read_list.html($fragment.clone());

                    if($li.find(".comment_box").hasClass("on")) {
                        $li_list.find("li").remove();
                        $li_list.html($fragment);
                    }
                } else {
                    $li_list.find("li").remove();
                    $li_list.html($fragment);
                }
            }
        }

        snsbbs.makeRecent = function(result, type) {
            var tab_no;
            var count = 0;
            var rendered = "";
            var no_recent = false;
            var notify = '';
            var list;

            if(type === "content") {
                notify = "새로운 글이 없습니다.";
                list = snsbbs.recent_content;
            } else {
                notify = "새로운 댓글이 없습니다.";
                list = snsbbs.recent_comment;
            }

            if(result.length > 0) {
                var $template = $('#tmpl-recent').html();
                var $fragment = $(document.createDocumentFragment());

                Mustache.parse($template);

                $.each(result, function(k, data) {
                    var recent = {
                        "id" : type + "_" + data.id,
                        "name" : data.user_name,
                        "contents" : data.contents,
                        "date" : data.regdate,
                        "provider" : data.provider,
                        "profileSrc" : data.profile_path,
                        "only_emoticon" : data.only_emoticon
                    }

                    if(type == "comment") {
                        recent.contentId = data.parent_id;
                    }

                    list[data.id] = recent;
                    $fragment.append(Mustache.render($template, recent));
                    count += 1;
                });
            } else {
                $fragment = $('<li id="norecent">' +
                        '<div class="norecent">'+ notify +'</div>' +
                        '</li>');
                count = "";
            }

            if(type == "content") {
                tab_no = snsbbs.CONTENT_TAB;
            } else {
                tab_no = snsbbs.COMMENT_TAB;;
            }

            $("#hdrecent_tab" + tab_no).find("ul").html($fragment.clone()); //.html(rendered);
            $("#recent_tab" + tab_no).find("ul").html($fragment); //.html(rendered);
            $("li[data-tab=hdrecent_tab" + tab_no + "]").find(".count").text(count);
            $("li[data-tab=recent_tab" + tab_no + "]").find(".count").text(count);
        }

        snsbbs.init = function() {
            var data = {};
            var $nowpage = $("#nowpage");
            var page = parseInt($nowpage.val());

            var request_data = {
                "dn": $('#dn').val(),
                "np": 1,
                "rm": 0,
            }

            var requests = [this.getContent(request_data), this.getRecentContent(), this.getRecentComment()]; //this.getContent("init")

            $.when.apply($, requests).then(function() {
                $.each(arguments, function(k, result) {
                    type = result[0]["type"];
                    data[type] = result[0];
                });

                if(data.content) {
                    data.content.process = "init";
                    snsbbs.total_list_count = data.content.list_count ? data.content.list_count : 0;
                    snsbbs.total_page = snsbbs.total_list_count > 0 ? Math.ceil(snsbbs.total_list_count / snsbbs.CONTENT_PER_PAGE) : 0;
                    snsbbs.makeContent(data.content.list);
                    $nowpage.val(page + 1);
                }

                if(data["recent_content"]) {
                    snsbbs.recent_content_id_list = data.recent_content.id_list;
                    snsbbs.makeRecent(data["recent_content"]["list"], "content");
                }

                if(data["recent_comment"]) {
                    snsbbs.recent_comment_id_list = data.recent_comment.id_list;
                    snsbbs.makeRecent(data["recent_comment"]["list"], "comment");
                }

                if(data.content && data.content.list_count > 0) {
                    grid.imagesLoaded().always(function() {
                        grid.masonry('layout');
                        $(".contents_list").find(".contents_loader").parent().remove();
                    });
                }
            });
        }

        snsbbs.more = function(type, id) {
            var request = [];

            var $contents_list = $(".contents_list");
            var list_count = $contents_list.find(">li:not(.loader)").length;
            var last_content_id = parseInt($contents_list.find(">li:not(.loader)").last().attr("id"));
            var remainder = list_count % this.CONTENT_PER_PAGE;

            var request_data = {
                "dn": $('#dn').val(),
                "np": $("#nowpage").val(),
                "rm": remainder,
                "last_id" : last_content_id
            }

            if(type === "content") {
                request = this.getContent(request_data);
            } else if(type === "comment") {
                request = this.getComment("more", id);
            }

            request.then(function(result) {
                var content_id = result.content_id;
                var type = result.type;
                var list = result.list;
                var list_count = result.list_count;
                var page = parseInt($("#nowpage").val());

                if(type === "content") {
                    var current_list_count = $(".contents_list>li:not(.loader)").length;

                    snsbbs.makeContent(list, "more");
                    $("#nowpage").val(page + 1);

                    grid.imagesLoaded().always(function() {
                        grid.masonry('layout');
                        $contents_list.find(".contents_loader").parent().remove();
                    });
                } else if(type === "comment") {
                    var is_more = result.is_more;
                    var $comment_box = $("#"+content_id).find(".comm_list");

                    $comment_box.find(".loader").remove();
                    snsbbs.makeComment(list, content_id, is_more, "more");
                    grid.masonry('initLayoutItems', grid.data('masonry').items, true);
                    //grid.masonry('layout');
                }
            });
        }

        snsbbs.write = function() {
            var pop_select_img = $('#pop_select_img').val();

            $.ajax({
                type: 'post',
                dataType: "json",
                url	: '/snsbbs/swrite',
                data : {
                    dn: $('#dn').val(),
                    domainid: $('#domainid').val(),
                    contents: encodeURIComponent($('#contents').val()),
                    icon: encodeURIComponent($('#select_icon').val()),
                    gimg: pop_select_img
                },
                timeout: 10000
            }).then(
                    function(result) {
                        var code = result.code;
                        var msg = result.msg;
                        var requests = [];
                        var data = [];

                        if(code == 200) {
                            if(pop_select_img){
                                location.href = "/gardenwedding/snsbbs";
                            } else {
                                var request_data = {
                                    "dn": $('#dn').val(),
                                    "np": 1,
                                    "rm": 0,
                                }

                                $(".contents_list").html("");
                                requests = [snsbbs.getContent(request_data), snsbbs.getRecentContent()];
                                snsbbs.clearFormContent();

                                $.when.apply($, requests).then(function() {
                                    $.each(arguments, function(k, result) {
                                        type = result[0]["type"];
                                        data[type] = result[0];
                                    });

                                    if(data.content) {
                                        snsbbs.total_list_count += 1;
                                        snsbbs.total_page = snsbbs.total_list_count > 0 ? Math.ceil(snsbbs.total_list_count / snsbbs.CONTENT_PER_PAGE) : 0;

                                        $("#nowpage").val(snsbbs.DEFAULT_PAGE);
                                        snsbbs.makeContent(data.content.list);
                                        $("#nowpage").val(snsbbs.DEFAULT_PAGE + 1);
                                    }

                                    if(data["recent_content"]) {
                                        snsbbs.makeRecent(data["recent_content"]["list"], "content");
                                    }

                                    if(data.content && data.content.list_count > 0) {;
                                        grid.imagesLoaded().always(function() {
                                            grid.masonry('layout');
                                            $(".contents_list").find(".contents_loader").parent().remove();
                                        });
                                    }

                                    $(window).scrollTop(0);
                                });
                            }
                        } else if(code == 203){
                            alert(msg);
                            location.href="/gardenwedding/snsbbs";
                        } else {
                            alert(msg);
                        }
                    },

                    function(request,status,error) {
                        alert("처리 중 내부오류가 발생했습니다. 잠시후에 시도해 주십시요.");
                        //console.log("code:"+request.status+"\n"+"message:"+request.responseText+"\n"+"error:"+error);
                        return false;
                    });
        }

        snsbbs.writeComment = function(btn) {
            var $content, $contents, $reply_count, id, tag, reply_count;
            var icon = "";
            var requests = [];
            var data = {};
            var content = $(btn).prev().find("input").val();
            var is_popup = $(btn).parents(".pop_read").length;

            if(is_popup) {
                $content = $(btn).parents(".pop_read");
                type = "pop_read";
            } else {
                $content = $(btn).parents("li");
                type = "default";
            }

            id = $content.attr("id");

            if($content.data("select_icon") !== undefined) {
                icon = encodeURIComponent($content.data("select_icon"));
            }

            $content.data("selector", type);

            if(!content && !icon) {
                return false;
            }

            if(type === "default") {
                $contents = $("li#" + id);
                $reply_count = $("li#" + id).find(".reply_area .reply_txt");
            } else {
                id = id.replace("read_content_", "");
                $contents = $("#read_content_" + id);
                $reply_count = $contents.find(".reply_area .reply_txt");
            }

            reply_count = parseInt($reply_count.text());

            $.ajax({
                type: 'post',
                dataType: "json",
                url	: '/snsbbs/cwrite',
                data : {
                    dn : $('#dn').val(),
                    sn : id,
                    contents : encodeURIComponent(content),
                    icon : icon
                },
                complete: function() {},
                timeout: 10000

            }).then(
                    function(result) {
                        if(result.code == 200) {
                            var $li = $("li#" + id);
                            var $li_reply_count = $li.find(".reply_area .reply_txt");
                            var $read_content = $("#read_content_" + id);
                            var $read_reply_count = $read_content.find(".reply_area .reply_txt");

                            snsbbs.clearFormComment(id, type);

                            $contents.data("page", 1);
                            $li_reply_count.text(reply_count + 1);

                            if(type === "pop_read") {
                                $read_reply_count.text(reply_count + 1)
                            }

                            $content.removeData("select_icon");

                            requests = [snsbbs.getComment("refresh", id, type), snsbbs.getRecentComment()];

                            $.when.apply($, requests).then(function() {
                                var $comment_box = $content.find(".comm_list");
                                $comment_box.find(".loader").remove();

                                $.each(arguments, function(k, result) {
                                    type = result[0]["type"];

                                    data[type] = {};
                                    data[type] = result[0];
                                });

                                if(data.comment) {
                                    snsbbs.makeComment(data.comment.list, data.comment.content_id, data.comment.is_more);

                                    grid.imagesLoaded().always(function() {
                                        grid.masonry('layout');
                                    });
                                }

                                if(data["recent_comment"]) {
                                    snsbbs.makeRecent(data["recent_comment"]["list"], "comment");
                                }

                                $content.removeData("selector");
                            });

                        } else if(result.code == 203){
                            alert(result.msg);
                            $(".popup_login").addClass("on");
                            //location.href="/gardenwedding/snsbbs";
                        } else {
                            if(result.hasOwnProperty("init") && result.init) {
                                snsbbs.init();
                            }

                            if(type === "pop_read") {
                                $("#popup_read").removeClass("on");
                                snsbbs.clearFormComment(id, type);
                            }

                            alert(result.msg);
                        }
                    },

                    function(request,status,error) {
                        alert("처리 중 내부오류가 발생했습니다. 잠시후에 시도해 주십시요.");
                        //console.log("code:"+request.status+"\n"+"message:"+request.responseText+"\n"+"error:"+error);
                        return;
                    }

            );
        }

        snsbbs.deleteContent = function(target) {
            var requests = [];
            var data = {};

            $.ajax({
                type: 'post',
                dataType: "json",
                url	: '/snsbbs/delSnsContent',
                data : { 'sn': target },
                timeout: 10000
            }).then(
                    function(result) {
                        if(result.code == 200) {
                            var $recent_comment_tab, $target_comment, recent_comment_count, target_comment_length, tab;
                            var $content_tab = $("[data-tab=hdrecent_tab1]").find(".color_txt")
                            var count = parseInt($content_tab.text());
                            var tabs = ["hdrecent_tab2", "recent_tab2"];

                            for(key in tabs) {
                                tab = tabs[key];

                                $recent_comment_tab = $("li[data-tab=" + tab + "] .color_txt");
                                recent_comment_count  = parseInt($recent_comment_tab.text());
                                $target_comment = $("#" + tab + " li[data-content-id=" + target + "]");
                                target_comment_count = parseInt($target_comment.length);

                                if(recent_comment_count - target_comment_count > 0) {
                                    $recent_comment_tab.text(recent_comment_count - target_comment_count);
                                } else {
                                    $recent_comment_tab.text("");
                                }

                                $target_comment.remove();
                            }

                            var request_data = {
                                "dn": $('#dn').val(),
                                "np": 1,
                                "rm": 0,
                            }

                            $(".contents_list").html("");
                            requests = [snsbbs.getContent(request_data), snsbbs.getRecentContent()]; //snsbbs.getContent("init")

                            $.when.apply($, requests).then(function() {
                                $.each(arguments, function(k, result) {
                                    type = result[0]["type"];
                                    data[type] = result[0];
                                });

                                if(data.content) {
                                    snsbbs.total_list_count -= 1;//data.content.list_count ? data.content.list_count : 0;
                                    snsbbs.total_page = snsbbs.total_list_count > 0 ? Math.ceil(snsbbs.total_list_count / snsbbs.CONTENT_PER_PAGE) : 0;

                                    $("#nowpage").val(snsbbs.DEFAULT_PAGE);
                                    snsbbs.makeContent(data.content.list);
                                    $("#nowpage").val(snsbbs.DEFAULT_PAGE + 1);
                                }

                                if(data["recent_content"]) {
                                    snsbbs.makeRecent(data["recent_content"]["list"], "content");
                                }

                                if(data.content && data.content.list_count > 0) {
                                    grid.imagesLoaded().always(function() {
                                        grid.masonry('layout');
                                    });
                                }

                                $(window).scrollTop(0);
                            });
                        } else if(result.code == 209){
                            //chaverows = false;
                            //cprocessing = false;
                        } else {
                            alert(result.msg);
                        }
                    },

                    function(request, status, error) {
                        alert("처리 중 내부오류가 발생했습니다. 잠시후에 시도해 주십시요.");
                        //console.log("code:"+request.status+"\n"+"message:"+request.responseText+"\n"+"error:"+error);
                        return;
                    }
            );
        }

        snsbbs.deleteComment = function(id, comm_id) {
            var $content, $reply_count, reply_count;
            var requests = [];
            var data = {};
            var type = $(".popup_comment_del").data("type");

            if(type === "default") {
                $content = $("#" + id);
            } else {
                $content = $("#read_content_" + id);

            }

            $reply_count = $content.find(".reply_area .reply_txt");
            reply_count = parseInt($reply_count.text());
            $content.data("selector", type);

            $.ajax({
                type: 'post',
                dataType: "json",
                url	: '/snsbbs/delSnsComment',
                data : {
                    'sn': comm_id,
                    'sb': id
                },
                timeout: 10000
            }).then(
                    function(result) {
                        if(result.code == 200) {
                            var $comment, $pop_comment, $comment, data_type;
                            var $comment_tab = $("[data-tab=hdrecent_tab" + snsbbs.COMMENT_TAB + "]").find(".color_txt")
                            var count = parseInt($comment_tab.text());
                            var $li = $("li#" + id);
                            var $li_reply_count = $li.find(".reply_area .reply_txt");
                            var $read_content = $("#read_content_" + id);
                            var $read_reply_count = $read_content.find(".reply_area .reply_txt");

                            $content.data("page", snsbbs.DEFAULT_PAGE);
                            requests = [snsbbs.getComment("refresh", id, type), snsbbs.getRecentComment()];

                            $.when.apply($, requests).then(function() {
                                var $comment_box = $content.find(".comm_list");
                                $comment_box.find(".loader").remove();

                                $.each(arguments, function(k, result) {
                                    if(result[0]["code"]) {
                                        data["cnt"] = result[0]["rcnt"];

                                        return;
                                    }

                                    data_type = result[0]["type"];
                                    data[data_type] = result[0];
                                });

                                if(data.comment) {
                                    snsbbs.makeComment(data.comment.list, data.comment.content_id, data.comment.is_more);
                                } else if(data["cnt"] === 0) {
                                    $pop_comment = $("#popup_read #comm_" + comm_id);
                                    $comment = $(".comm_list #comm_" + comm_id);

                                    if($comment.length) {
                                        $comment.remove();
                                    }
                                    if($pop_comment.length) {
                                        $pop_comment.remove();
                                    }
                                }

                                if(data["recent_comment"]) {
                                    snsbbs.makeRecent(data["recent_comment"]["list"], "comment");
                                }

                                $li_reply_count.text(reply_count - 1);
                                if(type === "pop_read") {
                                    $read_reply_count.text(reply_count - 1)
                                }

                                grid.imagesLoaded().always(function() {
                                    grid.masonry('layout');
                                });
                            });
                        } else if(result.code == 209) {
                            //chaverows = false;
                            //cprocessing = false;
                        } else {
                            alert(result.msg);
                        }
                    },

                    function(request,status,error) {
                        alert("처리 중 내부오류가 발생했습니다. 잠시후에 시도해 주십시요.");
                        //console.log("code:"+request.status+"\n"+"message:"+request.responseText+"\n"+"error:"+error);
                        return;
                    }
            );
        }

        snsbbs.scrolling = function(target, offsetTop) {
            $("html, body").stop(true).animate({scrollTop : offsetTop}, "fast", "swing", function(e) {
                if(snsbbs.border_target.length > 0) {
                    snsbbs.border_target.removeClass("focus");
                }

                target.addClass("focus");
                snsbbs.border_target = target;
            });
        }

        /*snsbbs.search = function(content_id, comment_id) {
         var type = "comment";
         var dn = $("#dn").val();
         var $content = $("#" + content_id);

         $.ajax({
         type: 'post',
         dataType: "json",
         url	: '/snsbbs/getContent',
         data : {
         "dn" : dn,
         "content_id" : content_id,
         "comment_id" : comment_id,
         "type" : type
         },
         success: function(result) {
         var total_comment_count = result.content.comment_count;
         var page, comment_count;
         var is_more = false;

         if(result.comment) {
         comment_count = result.comment.length;

         if(total_comment_count > comment_count) {
         is_more = true;
         }

         $content.find(".comment_box").addClass("on");
         snsbbs.makeComment(result.comment, content_id, is_more, "init", "default");
         }

         if(comment_count) {
         page = Math.ceil(comment_count / snsbbs.COMMENT_PER_PAGE);

         if(comment_count % snsbbs.COMMENT_PER_PAGE === 0) {
         page += 1;
         }
         } else {
         page = 1;
         }

         $content.data("page", page);

         grid.imagesLoaded().always(function() {
         grid.masonry('layout');
         });
         }
         });
         }*/

        snsbbs.masonry_init = function(target) {
            target.masonry({
                itemSelector: ".contents_list>li",
                columnWidth: ".content_size",
                gutter: ".gutter",
                percentPosition: true,
                transitionDuration: 0,
            });

            return target;
        }

    });

</script>
</body>
</html>
